install.packages("Rcmdr")
install.packages("rattle")
install.packages("Deducer")
install.packages("anomalize")
install.packages("datamaps")
protein_dist <- dist(protein_no_country, method = 'euclidian')
fviz_dist(protein_dist)
install.packages("factoextra")
fviz_dist(protein_dist)
install.packages("broom")
library(broom)
tidy(k_means_protein)
k_means_protein$centers
usa <- USArrests
skim(usa)
p
library(patchwork)
library(tidyverse) # обработка данных, графики...
library(skimr)# описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(cluster) # кластерный анализ
library(factoextra) # визуализации kmeans, pca,
library(dendextend) # визуализация дендрограмм
library(corrplot) # визуализация корреляций
library(broom) # метла превращает результаты оценивания моделей в таблички
library(naniar) # визуализация пропущенных значений
library(visdat) # визуализация пропущенных значений
library(patchwork) # удобное расположение графиков рядом
mx <- tibble(ID = c('A', 'B', 'C', 'D', 'E'),
x = c(1, 2, 4, 1, 8))
mx
my <- tibble(ID = c('A', 'C', 'D', 'F', 'E'),
y = c(5, 4, 6, 9, 3))
my
my_matrix <- matrix(c(1, 2, 3, 4, 5, 6), nrow = 2)
my_matrix
class(my_matrix)
my_tibble <- as_tibble(my_matrix)
skim(my_tibble)
my_list <- list(kreks = 'Привет!', peks = c(5, 6, NA), feks = diamonds)
my_list$kreks
my_list$peks
attributes(my_list)
```{r}
library(tidyverse)
library(rio)
library(skimr)
setwd("D:/R/77-Moscow-2016/Msc-2016/Data")
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
data01 <- import('Moscow-2016-working.xlsm')
setwd("D:/R/77-Moscow-2016/Msc-2016/Data")
data01 <- import('Moscow-2016-working.xlsm')
data01 <- import('Moscow-2016-working.xlsm')
data01 <- import('Moscow-2016-working')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(Ecdat) # много-много разных наборов данных
library(Ecdat) # много-много разных наборов данных
library(FFTrees) # быстрые деревья
library(Ecdat) # много-много разных наборов данных
library(FFTrees) # быстрые деревья
library(margins) # для подсчёта предельных эффектов
library(Ecdat) # много-много разных наборов данных
library(FFTrees) # быстрые деревья
library(margins) # для подсчёта предельных эффектов
library(rpart.plot) # для картинок деревьев
library(plotROC) # визуализация ROC-кривой
library(ggeffects) # графики для предельных эффектов
library(ggeffects) # графики для предельных эффектов
library(MLmetrics) # метрики качества
library(ranger) # строим деревья
install.packages("ranger")
library(ranger) # строим деревья
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
data01 <- import('Moscow-2016-working')
library(rio) # импорт фантастического количества форматов данных
data01 <- import("Moscow-2016-working.xlsx")
setwd("D:/R/77-Moscow-2016/Msc-2016")
data01 <- import("Moscow-2016-working.xlsx")
setwd("D:/R/77-Moscow-2016/Msc-2016/Data")
data1 <- import("Moscow-2016-working.xlsx")
skim(data01)
skim(data1)
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(Ecdat) # много-много разных наборов данных
library(Ecdat) # много-много разных наборов данных
library(FFTrees) # быстрые деревья
library(margins) # для подсчёта предельных эффектов
library(FFTrees) # быстрые деревья
library(margins) # для подсчёта предельных эффектов
library(rpart.plot) # для картинок деревьев
library(ggeffects) # графики для предельных эффектов
library(ggeffects) # графики для предельных эффектов
library(MLmetrics) # метрики качества
data1 <- import("Moscow-2016-working.xlsx")
library(tidyverse) # обработка данных, графики...
library(rio) # импорт фантастического количества форматов данных
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(Ecdat) # много-много разных наборов данных
library(FFTrees) # быстрые деревья
library(margins) # для подсчёта предельных эффектов
library(rpart.plot) # для картинок деревьев
library(plotROC) # визуализация ROC-кривой
library(ggeffects) # графики для предельных эффектов
library(MLmetrics) # метрики качества
library(ranger) # строим деревья
data1 <- import("Moscow-2016-working.xlsx")
data1 <- import('Moscow-2016-working.xlsx')
setwd("D:/R/77-Moscow-2016/Msc-2016")
data1 <- import('Moscow-2016-working.xlsx')
skim(data1)
library(tidyverse)
library(rio)
library(skimr)
data1 <- import('Moscow-2016-working.xls')
data1 <- import('Moscow-2016-working.xlsx')
data1 <- import('Moscow-2016-working.xlsx')
skim(data1)
data2 <- import('Population-average-2016.xls')
library(tidyverse) # обработка данных, графики...
library(vcd) # мозаичные графики для качественных переменных
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(ggalluvial) # потоковые диаграммы для качественных переменных
library(titanic) # набор данных о пассажирах Титаника
library(corrplot) # визуализация корреляций
library(reshape2) # длинные и широкие таблицы
data1 <- import('Moscow-2016-working.xlsx')
skim(data1)
data2 <- import('Population-average-2016.xls')
skim(data2)
data1 <- import('Moscow-2016-working.xlsx')
skim(data1)
View(data1)
income_taxes <- full_join(data1, data2, by = 'X__1')
View(data2)
data2 <- import('Population-average-2016.xlsx')
skim(data2)
income_taxes <- full_join(data1, data2, by = 'X__1')
View(data2)
data2 <- import('Population-average-2016.xlsx')
skim(data2)
data1 <- import('Moscow-2016-working.xlsx')
skim(data1)
income_taxes <- full_join(data1, data2, by = 'МО')
skim(income_taxes)
View(income_taxes)
View(income_taxes)
View(income_taxes)
data1 <- import('Moscow-2016-working.xlsx')
skim(data1)
data2 <- import('Population-average-2016.xlsx')
skim(data2)
data1 <- import('Moscow-2016-working.xlsx')
skim(data1)
data2 <- import('Population-average-2016.xlsx')
skim(data2)
income_taxes <- full_join(data1, data2, by = 'МО')
skim(income_taxes)
View(income_taxes)
View(income_taxes)
View(income_taxes)
data1 <- import('Moscow-2016-working.xlsx')
skim(data1)
data2 <- import('Population-average-2016.xlsx')
skim(data2)
income_taxes <- full_join(data1, data2, by = 'МО')
skim(income_taxes)
View(income_taxes)
data2 <- import('Population-average-2016.xlsx')
skim(data2)
income_taxes <- full_join(data1, data2, by = 'МО')
skim(income_taxes)
View(income_taxes)
View(income_taxes)
qplot(data = income_taxes, x = Среднемесячный доход до налогов) +
qplot(data = income_taxes, x = "Среднемесячный доход до налогов") +
labs(x = 'Среднемесячный доход до налогов, руб.', y = 'Количество', title = 'Среднемесячный доход на доходы до налогов')
